% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/video_to_video.R
\name{video_to_video}
\alias{video_to_video}
\title{Create image sequence from video}
\usage{
video_to_video(
  x,
  out_path = NULL,
  out_name = NULL,
  fps_sample = NULL,
  setpts = NULL,
  fps_out = NULL,
  audio_rm = F,
  audio_encoder = NULL,
  audio_bitrate = NULL,
  encoder = c("", "libx264", "libx265", "libvpx_vp9", "gif", "copy", "h264_videotoolbox"),
  container = c("", "mp4", "mkv", "webm", "gif", "avi", "mov"),
  preset = c("", "medium", "ultrafast", "superfast", "veryfast", "faster", "fast",
    "slow", "slower", "veryslow"),
  log_level = c("", "info", "quiet", "panic", "fatal", "error", "warning", "verbose",
    "debug", "trace"),
  metadata = c(title = NULL, artist = NULL, composer = NULL, album = NULL, date = NULL,
    comment = NULL, genre = NULL, copyright = NULL, track = NULL),
  cmd_to_key = c("", "title", "artist", "composer", "album", "date", "comment", "genre",
    "copyright", "track"),
  runtime_to_key = c("", "title", "artist", "composer", "album", "date", "comment",
    "genre", "copyright", "track"),
  overwrite = F,
  start = NULL,
  end = NULL,
  duration = NULL,
  duration_frames = NULL,
  scale = NULL,
  quality_crf = NULL,
  out_name_augment = F,
  flags_add_before_i = "",
  flags_add_after_i = "",
  which_ffmpeg = c("ffmpeg", "ffmpeg7"),
  run_cmd = T,
  skip_existing = F,
  ...
)
}
\arguments{
\item{x}{path to video file on disk}

\item{out_path}{output folder path; if NULL: folder created next to x with
filename of x}

\item{out_name}{name of output file w/o file extension}

\item{fps_sample}{how many frames per second to sample from input;
check media info with av::av_media_info(x), NULL to sample all}

\item{setpts}{setpts argument of -vf flag; controls playback speed of output file;
relative timestamp conversion of frames; if NULL, subject to change
depend upon fps_sample and fps_out}

\item{fps_out}{-f flag: fps in output file}

\item{audio_rm}{remove audio? -an flag}

\item{audio_encoder}{-c:a flag}

\item{audio_bitrate}{-b:a flag}

\item{encoder}{video encoder/format; checked in combination with
container}

\item{container}{output container/ file ext, if NULL same as input file ext}

\item{preset}{-preset flag: strength of compression}

\item{log_level}{amount of log info}

\item{metadata}{named vector of metadata keys to set}

\item{cmd_to_key}{save ffmpeg to any metadata key? provide the key name;
one of c("title", "artist", "composer", "album", "date", "comment",
"genre", "copyright", "track")}

\item{runtime_to_key}{write conversion time to a keyword?}

\item{overwrite}{overwrite files on disk? if FALSE and file exists in out_path,
file name is augmented by increasing integer at the end}

\item{start}{start time in seconds or format like 23:00 or 01:10:15;
-ss flag before -i (https://trac.ffmpeg.org/wiki/Seeking), define milliseconds
like so: 2.500 for 2 sec and 500 millis or 00:00:02.500}

\item{end}{end time, format like start; -to flag of ffmpeg}

\item{duration}{-t flag: number of seconds to encode from start; may be in
hh:mm:ss format of just a number of seconds}

\item{duration_frames}{how many frames to write from start}

\item{scale}{resize output images, c(width, height); either something like
c(1280, 720) for exact pixels or c(0.5, 0.5) for fraction of input}

\item{quality_crf}{-crf flag: see ?video_batch_convert}

\item{out_name_augment}{add flags to out_name to make it unique and/or
descriptive; TRUE, FALSE, "end" or "start" to place flags at end or start;
TRUE puts it at end}

\item{flags_add_before_i}{additional flags for ffmpeg command before input file}

\item{flags_add_after_i}{additional flags for ffmpeg command after input file}

\item{which_ffmpeg}{which version to use}

\item{run_cmd}{run ffmpeg command (TRUE) or just return the string (FALSE)}

\item{skip_existing}{skip conversion of an existing output file on disk}

\item{...}{for internal use}
}
\value{
cmd string
}
\description{
Calling ffmpeg with system() was found much faster than av::av_encode_video.
Install ffmpeg or ffmpeg7 with macports: sudo port install ffmpeg or
sudo port install ffmpeg7. Non of them was found superior, yet.
This is a wrapper to create a ffmpeg simplifying the call but not providing
full complexity.
}
\examples{
\dontrun{
# this makes timelapse correctly
# N = frame number starting at 0
# 30 = fps
# TB = time base (internal FFmpeg constant)
# https://stackoverflow.com/questions/41902160/create-time-lapse-video-from-other-video
video_to_video(
  x = x,
  flags_add = "-vf 'framestep=30,setpts=N/30/TB' -an",
  fps_out = 30,
  audio_rm = T
)
however this one does as well
setpts is inferred from fps_sample = 1 and fps_in = 30 (1/30)
however, -vf flag mus not contain "fps=1" but setpts only
but why does this cause frame dropping?
ffmpeg -y -v info -i 'in.mp4' -c:v libx264 -an -vf 'setpts=0.0333*PTS' -an 'out.mp4'
https://www.reddit.com/r/ffmpeg/comments/1bcfru6/speeding_up_a_video_by_5x_by_dropping_frames_and/
ffmpeg syntax remains difficult (or inconsistent?)
ffmpeg 4.4.6 and 7.1.1 behave different here! with v7, frames are not dropped
chatgpt also gives wrong answers
see https://ffmpeg.org/ffmpeg-filters.html#fps and https://trac.ffmpeg.org/wiki/ChangingFrameRate#Verifyingframeratechanges
so it is very complicated, but vf = fps=fps=25 as in av package appears there
}
}
