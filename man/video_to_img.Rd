% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/video_to_img.R
\name{video_to_img}
\alias{video_to_img}
\title{Create image sequence from video}
\usage{
video_to_img(
  x,
  out_path = NULL,
  fps_sample = NULL,
  total_frames = NULL,
  total_frames_evenly = T,
  format = c("png", "jpeg2000", "jpegls", "mjpeg", "tiff", "bmp"),
  out_prefix = NULL,
  out_suffix = NULL,
  overwrite = T,
  start = NULL,
  end = NULL,
  scale = NULL,
  which_ffmpeg = c("ffmpeg", "ffmpeg7"),
  flags_add_before_i = "",
  flags_add_after_i = "",
  log_level = c("", "info", "quiet", "panic", "fatal", "error", "warning", "verbose",
    "debug", "trace")
)
}
\arguments{
\item{x}{path to video file on disk}

\item{out_path}{output folder path; if NULL: folder created next to x with
filename of x}

\item{fps_sample}{how many frames per second to sample from input;
check media info with av::av_media_info(x), NULL to sample all}

\item{total_frames}{alternative to fps_sample, see total_frames_evenly
for interpretation}

\item{total_frames_evenly}{total frames sampled evenly across duration of
x of total images sampled from start}

\item{format}{output image format; all jpeg formats yield .jpg file
extension; see av::av_encoders(), options here were found working with
calling ffmpeg directly}

\item{out_prefix}{image name prefix; if NULL filename of x}

\item{out_suffix}{must be of format %id with i being any number to define
number of leading zeros; NULL for automatic setting based on total
expected images}

\item{overwrite}{overwrite files on disk?}

\item{start}{start time in seconds or format like 23:00 or 01:10:15;
-ss flag before -i (https://trac.ffmpeg.org/wiki/Seeking)}

\item{end}{end time, format like start; -to flag of ffmpeg}

\item{scale}{resize output images, c(width, height); either something like
c(1280, 720) for exact pixels or c(0.5, 0.5) for fraction of input}

\item{which_ffmpeg}{ffmpeg version}

\item{flags_add_before_i}{additional flags for ffmpeg command before input, e.g. for
jpg: -q:v 2 (lower is better (range: 2â€“31)) or for png:
-compression_level 0 (0 (fast) to 100 (max compression));}

\item{flags_add_after_i}{additional flags for ffmpeg command after input}

\item{log_level}{amount of log info printed}
}
\value{
nothing
}
\description{
Calling ffmpeg with system() was found much faster than av::av_encode_video.
Install ffmpeg or ffmpeg7 with macports: sudo port install ffmpeg or
sudo port install ffmpeg7. Non of them was found superior, yet.
This is a wrapper to create a ffmpeg call simplifying it but not providing
full complexity.
}
\examples{
\dontrun{
x <- "/Users/chris/Downloads/001_GOPR0006.MP4"
video_to_img(x = x, format = "png", total_frames = 10, total_frames_evenly = T)
}
}
